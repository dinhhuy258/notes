site_name: Notes
site_url: https://dinhhuy258.github.io/notes/
repo_url: https://github.com/dinhhuy258/notes
site_author: Huy Duong
site_description: Huy Duong's notes
copyright: Copyright &copy; 2021 - 2021 Huy Duong

# Configuration
theme:
  name: material
  features:
    - navigation.tabs
    - navigation.top
    - toc.integrate
  palette:
    - scheme: default
      toggle:
        icon: material/toggle-switch-off-outline
        name: Switch to dark mode
    - scheme: slate
      toggle:
        icon: material/toggle-switch
        name: Switch to light mode
  icon:
    repo: fontawesome/brands/github

extra:
  disqus: huyduong-notes

# Extensions
markdown_extensions:
  - pymdownx.highlight:
      linenums: true
  - pymdownx.superfences
  - pymdownx.inlinehilite

# Page tree
nav:
  - Home: index.md
  - Algorithms:
    - Binary search: algorithms/binary_search.md
    - KMP: algorithms/kmp.md
    - Bucket sort: algorithms/bucket_sort.md
    - Huffman coding: algorithms/huffman_coding.md
    - Union find: algorithms/union_find.md
    - Monotonic stack: algorithms/monotonic_stack.md
    - Minimum spanning tree: algorithms/minimum_spanning_tree.md
    - Shortest Path Algorithms: algorithms/shortest_path_algorithms.md
    - Articulation Points and Bridges: algorithms/articulation_points_and_bridges.md
    - Topological Sort: algorithms/topological_sort.md
    - String Hashing: algorithms/string_hashing.md
    - Bloom filter: algorithms/bloom_filter.md
    - Binary indexed tree: algorithms/binary_indexed_tree.md
    - Segment tree: algorithms/segment_tree.md
  - Distributed System:
    - ZooKeeper:
      - Fundamentals: distributed-system/zookeeper/fundamentals.md
      - Workflow: distributed-system/zookeeper/workflow.md
      - Leader Election: distributed-system/zookeeper/leader_election.md
    - Kafka:
      - Installation: distributed-system/kafka/installation.md
      - Producer: distributed-system/kafka/producer.md
      - Consumer: distributed-system/kafka/consumer.md
      - Reliable Data Delivery: distributed-system/kafka/reliable_data_delivery.md
      - Exactly-Once Semantics: distributed-system/kafka/exactly_once_semantics.md
      - Kafka Connect: distributed-system/kafka/kafka_connect.md
    - Distributed System: distributed-system/distributed_system.md
    - Cohesion and coupling: distributed-system/cohesion_and_coupling.md
    - Microservice communication: distributed-system/microservice_communication.md
    - Service discovery: distributed-system/service_discovery.md
    - API Gateway: distributed-system/api_gateway.md
    - Service Mesh: distributed-system/service_mesh.md
  - Database:
    - PostgreSQL:
      - How Postgres Stores Rows: database/postgres/how_postgres_stores_rows.md
      - Concurrency Control: database/postgres/concurrency_control.md
      - Vacuum Processing: database/postgres/vacuum_processing.md
    - SQL cheat sheet: database/sql_cheat_sheet.md
    - MySQL: database/mysql.md
    - Transactions: database/transactions.md
    - NoSQL: database/nosql.md
    - Cassandra: database/cassandra.md
    - LSM Tree: database/lsm_tree.md
  - Web:
    - HTTP: web/http.md
    - Networking:
      - TCP: web/networking/tcp.md
      - Understanding socket and port in TCP: web/networking/understanding_socket_and_port_in_tcp.md
    - Security:
      - JWT: web/security/jwt.md
      - OAuth2: web/security/oauth2.md
      - OpenId Connect: web/security/openid_connect.md
      - CORS: web/security/cors.md
    - WebRTC:
      - WebRTC: web/webrtc/webrtc.md
      - Signaling: web/webrtc/signaling.md
      - Connecting: web/webrtc/connecting.md
      - Media communication: web/webrtc/media_communication.md
      - Example: web/webrtc/example.md
  - Programming:
    - Golang:
      - Array and slice: programming/golang/array_and_slice.md
      - Goroutine: programming/golang/goroutine.md
      - Context: programming/golang/context.md
    - Git:
      - Git commands: programming/git/git_commands.md
    - Kotlin:
      - Coroutine:
        - Coroutine basics: programming/kotlin/coroutine/basics.md
        - Coroutine context and dispatchers: programming/kotlin/coroutine/context_and_dispatchers.md
  - Devops:
    - AWS:
      - IAM: devops/aws/iam.md
      - EC2: devops/aws/ec2.md
      - Elastic Load Balancing and Auto Scaling groups: devops/aws/elb_asg.md
      - RDS: devops/aws/rds.md
      - Route 53: devops/aws/route_53.md
      - Route 53: devops/aws/s3.md
    - Docker:
      - Docker Overview: devops/docker/docker.md
      - Docker Images: devops/docker/docker_images.md
      - Docker Storage: devops/docker/docker_storage.md
      - Docker Network: devops/docker/docker_network.md
    - Kubernetes:
      - Pods: devops/kubernetes/pods.md
      - Controllers: devops/kubernetes/controllers.md
      - Service: devops/kubernetes/service.md
      - Ingress: devops/kubernetes/ingress.md
      - Volumes: devops/kubernetes/volumes.md
      - ConfigMaps: devops/kubernetes/config_maps.md
